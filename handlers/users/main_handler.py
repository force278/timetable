import random
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.dispatcher.filters.builtin import CommandSettings
from aiogram.dispatcher.filters.builtin import CommandHelp
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from states.info import Info
from loader import dp, DB, bot, CR
from constants import *
from funcs.chuvsu_func import *
from funcs.chgau_func import *

count_of_distribution = 0
count_of_ban = 0

# –ù–ê–ñ–ê–õ–ò –°–¢–ê–†–¢
@dp.message_handler(CommandStart())
async def start_command(message: types.Message):
	await DB.add(message.from_user.id)
	await CR.augment()
	await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
	keyboard = types.InlineKeyboardMarkup()
	key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
	keyboard.add(key_button)
	await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
	await Info.chuvsu_what.set()


# –ù–ê–ñ–ê–õ–ò –ö–ê–ö–ê–Ø –ù–ï–î–ï–õ–Ø 
@dp.message_handler(commands=['weekinfo'])
async def weekinfo_command(message: types.Message):
	await get_week_info(message.from_user.id)
	await CR.augment()


# –ù–ê–ñ–ê–õ–ò –°–õ–ï–î–£–Æ–©–ê–Ø –ù–ï–î–ï–õ–Ø
@dp.message_handler(commands=['nextweek'])
async def weekinfo_command(message: types.Message):
	result = await DB.get(message.from_user.id)
	await CR.augment()
	if result[0][2] == '–ß–ì–ê–£':
		await bot.send_message(message.from_user.id, text='–î–ª—è –ß–ì–ê–£ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞')
	else:
		await bot.send_message(message.from_user.id, text='üîÑ–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')
		await print_tt_for_next_week(message.from_user.id, DAYS, PARAS)
		await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id+1)


@dp.message_handler(commands=['i'])
async def weekinfo_command(message: types.Message):
	result = await DB.info()
	string = await CR.get_info()
	await bot.send_message(message.from_user.id, text= f'–ë–æ—Ç–æ–º –ø–æ–ª—å–∑—É–µ—Ç—Å—è: {result[0]} üë®‚Äçüéì\n–ò–∑ –Ω–∏—Ö\nüîµ–ß–ì–£: <code>{result[1]}</code>\nüü¢–ß–ì–ê–£: <code>{result[2]}</code>\n\n{string}')


# –ù–ê–ñ–ê–õ–ò –ù–ê–°–¢–†–û–ô–ö–ò
@dp.message_handler(CommandSettings())
async def settings(message):
	vuz = await DB.get(message.from_user.id)
	vuz = vuz[0][2]
	await CR.augment()
	if vuz == '–ß–ì–ê–£':
		keyboard = types.InlineKeyboardMarkup()
		key_group_edit = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data='group_edit')
		key_close = types.InlineKeyboardButton(text='‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data='close')
		keyboard.add(key_group_edit)
		keyboard.add(key_close)
		result = await DB.get(message.from_user.id)
		temp = f'–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞: {result[0][3]}\n\n'
		await Info.update.set()
		await bot.send_message(message.from_user.id, text= temp+'–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=keyboard)
	else:
		keyboard = types.InlineKeyboardMarkup()
		key_group_edit = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', callback_data='group_edit')
		key_subgroup_edit = types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–¥–≥—Ä—É–ø–ø—É', callback_data='subgroup_edit')
		key_close = types.InlineKeyboardButton(text='‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data='close')
		keyboard.add(key_group_edit, key_subgroup_edit)
		keyboard.add(key_close)
		result = await DB.get(message.from_user.id)
		temp = f'–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞: {result[0][3]}\n–ü–æ–¥–≥—Ä—É–ø–ø–∞: {result[0][5]}\n\n'
		await Info.update.set()
		await bot.send_message(message.from_user.id, text= temp+'–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=keyboard)

# –ù–ê–ñ–ê–õ–ò –ü–û–ú–û–©–¨
@dp.message_handler(CommandHelp())
async def _help(message):
	await CR.augment()
	await bot.send_message(message.from_user.id, text= '–ù–∞—à–µ–ª –æ—à–∏–±–∫—É?\n–°–æ–æ–±—â–∏ <a href="https://t.me/weekendend">–º–Ω–µ</a> –æ –Ω–µ–π.', disable_web_page_preview=True)

# –ù–ê–ñ–ê–õ–ò –ß–¢–û-–¢–û –ò–ó –ü–£–ù–ö–¢–ê –ú–ï–ù–Æ
@dp.callback_query_handler(state=Info.update)
async def update(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.augment()
	vuz = await DB.get(call.message.chat.id)
	vuz = vuz[0][2]
	if vuz == '–ß–ì–ê–£':
		if call.data == 'group_edit':
			keyboard = types.InlineKeyboardMarkup()
			key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button')
			keyboard.add(key_button)
			await bot.send_message(call.message.chat.id, text='1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.\n–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∞-1–º</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏.', reply_markup=keyboard)
			await Info.chgau_what.set()
		elif call.data == 'close':
			await state.finish()
			await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	else:
		if call.data == 'group_edit':
			keyboard = types.InlineKeyboardMarkup()
			key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button')
			keyboard.add(key_button)
			await bot.send_message(call.message.chat.id, text='1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.\n–ù–∞–ø—Ä–∏–º–µ—Ä: –∏–≤—Ç-42-20\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏.', reply_markup=keyboard)
			await Info.chuvsu_what.set()
		elif call.data == 'subgroup_edit':
			temp = ''
			result = await DB.get(call.message.chat.id)
			if len(result) == 0:
				DB.add(call.message.chat.id)
			else:
				if result[0][5] == 0:
					temp = '‚ÑπÔ∏è–í—ã –±–µ–∑ –ø–æ–¥–≥—Ä—É–ø–ø—ã\n\n'
				else:
					temp = '‚ÑπÔ∏è–¢–µ–∫—É—â–∏–π: ' + str(result[0][5]) + ' –ø–æ–¥–≥—Ä—É–ø–ø–∞\n\n'
			keyboard = types.InlineKeyboardMarkup()
			key_nosubroup = types.InlineKeyboardButton(text='–±–µ–∑ –ø–æ–¥–≥—Ä—É–ø–ø—ã', callback_data='nosubgroup')
			keyboard.add(key_nosubroup)
			key_subgroup1 = types.InlineKeyboardButton(text='1 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup1')
			keyboard.add(key_subgroup1)
			key_subgroup2 = types.InlineKeyboardButton(text='2 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup2')
			keyboard.add(key_subgroup2)
			key_close = types.InlineKeyboardButton(text='‚ùå–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='close')
			keyboard.add(key_close)
			await Info.chuvsu_add_subgroup.set()
			await bot.send_message(call.message.chat.id, text= temp +'–ò–∑ –∫–∞–∫–æ–π –í—ã –ø–æ–¥–≥—Ä—É–ø–ø—ã?', reply_markup=keyboard)
		elif call.data == 'close':
			await state.finish()
			await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

@dp.message_handler(state=Info.update)
async def update(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  
		
# –ù–ê–ü–ò–°–ê–õ–ò –¢–ï–ö–°–¢ –ë–ï–ó –°–¢–ê–¢–£–°–ê
@dp.message_handler(content_types=['text'])
async def message(message: types.Message):
	result = await DB.get(message.from_user.id)
	if message.text.lower() == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é':
		await bot.send_message(message.from_user.id, text='üîÑ–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')
		if result[0][2] == '–ß–ì–ê–£':
			await CR.augment()
			await bot.send_message(call.message.chat.id, text= temp +'–î–ª—è –ß–ì–ê–£ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.', reply_markup=keyboard)
		else:
			await CR.chuvsu_augment()
			await print_tt_for_week(message.from_user.id, DAYS, PARAS)
		await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id+1)
	elif (message.text).lower() == '–∑–∞–≤—Ç—Ä–∞':
		await bot.send_message(message.from_user.id, text='üîÑ–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')
		if result[0][2] == '–ß–ì–ê–£':
			await CR.chgau_augment()
			await chgau_print_tt_for_tomorrow(message.from_user.id)
		else:
			await CR.chuvsu_augment()
			await print_tt_for_tommorow(message.from_user.id, DAYS, PARAS)
		await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id+1)
	elif (message.text).lower() == '—Å–µ–≥–æ–¥–Ω—è':
		await bot.send_message(message.from_user.id, text='üîÑ–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ...')
		if result[0][2] == '–ß–ì–ê–£':
			await CR.chgau_augment()
			await chgau_print_tt_for_today(message.from_user.id)
		else:
			await CR.chuvsu_augment()
			await print_tt_for_today(message.from_user.id, DAYS, PARAS)
		await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id+1)
	elif (message.text).lower() == '—Ä–∞—Å—Å—ã–ª–∫–∞!':
		await bot.send_message(message.from_user.id, text='üîÑ–û—Ç–ø—Ä–∞–≤–ª—è—é...')
		result = await DB.get_all_usersid()
		for i in result:
			try:
				await bot.send_message(i[0], text='''–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –¥–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è. –°–ø–µ—à–∏–º —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –±–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç.

–¢–∞–∫ –∂–µ, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´–ú–æ–π –ß—É–≤–ì–£¬ª –æ—Ç –∫–æ–º–∞–Ω–¥—ã —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –ò–í–¢, —Ç–∞–º —Ç–æ–∂–µ –º–æ–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. 
–°–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: https://online.chuvsu.ru/download

–£—Å–ø–µ—Ö–æ–≤ –≤–∞–º –≤ —É—á–µ–±–Ω–æ–º –≥–æ–¥—É.''')
				count_of_distribution = count_of_distribution + 1
			except:
				pass
		await bot.send_message(message.from_user.id, text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∏–≤—à–∏—Ö —Ä–∞—Å—Å—ã–ª–∫—É {count_of_distribution}\n\n–ù–µ –ø–æ–ª—É—á–∏–≤—à–∏—Ö {count_of_ban}')
		
	else:
		await CR.augment()
		await bot.send_sticker(chat_id=message.from_user.id, sticker=stickers['dont_understand'][random.randint(0,2)])
		await bot.send_message(message.from_user.id, text='ü§∑–ù–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å.')
