import random
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from states.info import Info
from loader import dp, DB, bot, CR
from constants import *
from funcs.chuvsu_func import *


# –í–´–ë–†–ê–õ–ò –ß–ì–£ –ò –•–û–¢–Ø–¢ –í–´–ë–†–ê–¢–¨ –ì–†–£–ü–ü–£ –ö–ù–û–ü–ö–ê–ú–ò (–ü–û–ö–ê–ó–´–í–ê–ï–ú –§–ê–ö–£–õ–¨–¢–ï–¢–´)
@dp.callback_query_handler(state=Info.chuvsu_what)
async def chuvsu_what(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'button':
		keyboard = types.InlineKeyboardMarkup()
		for key, value in FAC.items():
			key_fac_edit = types.InlineKeyboardButton(text=value, callback_data=key)
			keyboard.add(key_fac_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞?', reply_markup=keyboard)
		await Info.chuvsu_add_fac.set()
	elif call.data == 'back': # –ï–°–õ–ò –•–û–¢–Ø–¢ –í–ï–†–ù–£–¢–¨–°–Ø –ö –í–´–ë–û–†–£ –í–£–ó–∞
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()


# –í–´–ë–†–ê–õ–ò –ß–ì–£ –ò –ù–ê–ü–ò–°–ê–õ–ò –¢–ï–ö–°–¢–û–ú (–•–û–¢–Ø–¢ –í–´–ë–†–ê–¢–¨ –ì–†–£–ü–ü–£ –¢–ï–ö–°–¢–û–ú)
@dp.message_handler(state=Info.chuvsu_what)
async def chuvsu_what(message: types.Message, state=FSMContext):
	await CR.chuvsu_augment()
	if message.text.lower() in GROUPS:
		await DB.update(UserID=message.from_user.id, GroupID=GROUPS[message.text.lower()], GroupName=message.text.lower())
		keyboard = types.InlineKeyboardMarkup()
		key_nosubroup = types.InlineKeyboardButton(text='–±–µ–∑ –ø–æ–¥–≥—Ä—É–ø–ø—ã', callback_data='nosubgroup')
		keyboard.add(key_nosubroup)
		key_subgroup1 = types.InlineKeyboardButton(text='1 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup1')
		key_subgroup2 = types.InlineKeyboardButton(text='2 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup2')
		keyboard.add(key_subgroup1, key_subgroup2)
		await Info.chuvsu_add_subgroup.set()
		await bot.send_message(message.from_user.id, text=f'‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤ –≥—Ä—É–ø–ø–µ: {message.text.lower()}\n\n–ò–∑ –∫–∞–∫–æ–π –í—ã –ø–æ–¥–≥—Ä—É–ø–ø—ã?' , reply_markup=keyboard)
	elif message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text=f'ü§∑–ù–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –≥—Ä—É–ø–ø—É.\n\n–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ç–∞–∫ –∂–µ\n–∫–∞–∫ –Ω–∞ —Å–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.')

# –í–´–ë–†–ê–õ–ò –§–ê–ö–£–õ–¨–¢–ï–¢ (–ü–û–ö–ê–ó–´–í–ê–ï–ú –§–û–†–ú–´ –û–ë–£–ß–ï–ù–ò–Ø)
@dp.callback_query_handler(state=Info.chuvsu_add_fac)
async def add_fac(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'back':
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(call.message.chat.id, text='1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await state.update_data(fac_id = call.data)
		keyboard = types.InlineKeyboardMarkup()
		key_form_edit = types.InlineKeyboardButton(text='–û—á–Ω–∞—è', callback_data='1')
		keyboard.add(key_form_edit)
		key_form_edit = types.InlineKeyboardButton(text='–û—á–Ω–æ-–∑–∞–æ—á–Ω–∞—è', callback_data='2')
		keyboard.add(key_form_edit)
		key_form_edit = types.InlineKeyboardButton(text='–ó–∞–æ—á–Ω–∞—è', callback_data='3')
		keyboard.add(key_form_edit)
		key_back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_back)
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è:', reply_markup=keyboard)
		await Info.chuvsu_add_form.set()

@dp.message_handler(state=Info.chuvsu_add_fac)
async def chuvsu_add_fac(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –§–û–†–ú–£ –û–ë–£–ß–ï–ù–ò–Ø (–ü–û–ö–ê–ó–´–í–ê–ï–ú –£–†–û–í–ù–ò –û–ë–†–ê–ó–û–í–ê–ù–ò–Ø)
@dp.callback_query_handler(state=Info.chuvsu_add_form)
async def add_form(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'back':
		keyboard = types.InlineKeyboardMarkup()
		for key, value in FAC.items():
			key_fac_edit = types.InlineKeyboardButton(text=value, callback_data=key)
			keyboard.add(key_fac_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞?', reply_markup=keyboard)
		await Info.chuvsu_add_fac.set()
	else:
		await state.update_data(form_id = call.data)
		data = await state.get_data()
		levels = await get_level(data['fac_id'], call.data)
		keyboard = types.InlineKeyboardMarkup()
		for key, value in levels.items():
			key_level_edit = types.InlineKeyboardButton(text=value, callback_data=key)
			keyboard.add(key_level_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:', reply_markup=keyboard)
		await Info.chuvsu_add_level.set()

@dp.message_handler(state=Info.chuvsu_add_form)
async def chuvsu_add_form(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –£–†–û–í–ï–ù–¨ –û–ë–†–ê–ó–û–í–ê–ù–ò–Ø (–ü–û–ö–ê–ó–´–í–ê–ï–ú –ö–£–†–°–´)
@dp.callback_query_handler(state=Info.chuvsu_add_level)
async def add_level(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'back':
		keyboard = types.InlineKeyboardMarkup()
		key_form_edit = types.InlineKeyboardButton(text='–û—á–Ω–∞—è', callback_data='1')
		keyboard.add(key_form_edit)
		key_form_edit = types.InlineKeyboardButton(text='–û—á–Ω–æ-–∑–∞–æ—á–Ω–∞—è', callback_data='2')
		keyboard.add(key_form_edit)
		key_form_edit = types.InlineKeyboardButton(text='–ó–∞–æ—á–Ω–∞—è', callback_data='3')
		keyboard.add(key_form_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await Info.chuvsu_add_form.set()
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è:', reply_markup=keyboard)
	else:
		await state.update_data(level_id = call.data)
		data = await state.get_data()
		groups = await get_groups_without_course(data['fac_id'], data['form_id'], call.data)
		keyboard = types.InlineKeyboardMarkup()
		i = 0
		for key, value in groups.items():
			i = i + 1
			key_course_edit = types.InlineKeyboardButton(text=f'{str(i)} –∫—É—Ä—Å', callback_data=str(i))
			keyboard.insert(key_course_edit)
		key_back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_back)
		await Info.chuvsu_add_course.set()
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à –∫—É—Ä—Å:', reply_markup=keyboard)

@dp.message_handler(state=Info.chuvsu_add_level)
async def chuvsu_add_level(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –ö–£–†–° (–ü–û–ö–ê–ó–´–í–ê–ï–ú –ì–†–£–ü–ü–´)
@dp.callback_query_handler(state=Info.chuvsu_add_course)
async def add_course(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'back':
		data = await state.get_data()
		levels = await get_level(data['fac_id'], data['form_id'])
		keyboard = types.InlineKeyboardMarkup()
		for key, value in levels.items():
			key_level_edit = types.InlineKeyboardButton(text=value, callback_data=key)
			keyboard.add(key_level_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:', reply_markup=keyboard)
		await Info.chuvsu_add_level.set()
	else:
		await state.update_data(course = call.data)
		data = await state.get_data()
		groups = await get_groups(data['fac_id'], data['form_id'], data['level_id'], call.data)
		keyboard = types.InlineKeyboardMarkup()
		for key, value in groups.items():
			key_group_edit = types.InlineKeyboardButton(text=value, callback_data=key)
			keyboard.add(key_group_edit)
		key_back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_back)
		await Info.chuvsu_add_group_with_button.set()
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à—É –≥—Ä—É–ø–ø—É:', reply_markup=keyboard)

@dp.message_handler(state=Info.chuvsu_add_course)
async def chuvsu_add_course(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –ì–†–£–ü–ü–£ (–ü–û–ö–ê–ó–´–í–ê–ï–ú –ü–û–î–ì–†–£–ü–ü–´)
@dp.callback_query_handler(state=Info.chuvsu_add_group_with_button)
async def add_group_with_button(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chuvsu_augment()
	if call.data == 'back':
		data = await state.get_data()
		groups = await get_groups_without_course(data['fac_id'], data['form_id'], data['level_id'])
		keyboard = types.InlineKeyboardMarkup()
		i = 0
		for key, value in groups.items():
			i = i + 1
			key_course_edit = types.InlineKeyboardButton(text=f'{str(i)} –∫—É—Ä—Å', callback_data=str(i))
			keyboard.insert(key_course_edit)
		key_back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_back)
		await Info.chuvsu_add_course.set()
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à –∫—É—Ä—Å:', reply_markup=keyboard)
	else: 
		groupname = await get_groupname(call.data)
		await state.update_data(group_id = call.data, group_name = groupname)
		await DB.update(UserID=call.message.chat.id, GroupID=call.data, GroupName=groupname)
		keyboard = types.InlineKeyboardMarkup()
		key_nosubroup = types.InlineKeyboardButton(text='–±–µ–∑ –ø–æ–¥–≥—Ä—É–ø–ø—ã', callback_data='nosubgroup')
		keyboard.add(key_nosubroup)
		key_subgroup1 = types.InlineKeyboardButton(text='1 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup1')
		key_subgroup2 = types.InlineKeyboardButton(text='2 –ø–æ–¥–≥—Ä—É–ø–ø–∞', callback_data='subgroup2')
		keyboard.add(key_subgroup1, key_subgroup2)
		await Info.chuvsu_add_subgroup.set()
		await bot.send_message(call.message.chat.id, text=f'‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤ –≥—Ä—É–ø–ø–µ: {groupname}\n\n–ò–∑ –∫–∞–∫–æ–π –í—ã –ø–æ–¥–≥—Ä—É–ø–ø—ã?' , reply_markup=keyboard)


@dp.message_handler(state=Info.chuvsu_add_group_with_button)
async def chuvsu_add_group_with_button(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –ü–û–î–ì–†–£–ü–ü–£ (–ì–û–¢–û–í–´ –ü–û–ö–ê–ó–´–í–ê–¢–¨ –†–ê–°–ü–ò–°–ê–ù–ò–ï)
@dp.callback_query_handler(state=Info.chuvsu_add_subgroup)
async def add_subgroup(call: types.CallbackQuery, state=FSMContext):
	await CR.chuvsu_augment()
	if call.data == 'nosubgroup':
		await DB.update(UserID=call.message.chat.id, Subgroup='0')
		await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
		keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é', '–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
		await state.finish()
		await bot.send_message(call.message.chat.id, text='‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –±–µ–∑ –ø–æ–¥–≥—Ä—É–ø–ø—ã', reply_markup=keyboard)
	elif call.data == 'subgroup1':
		await DB.update(UserID=call.message.chat.id, Subgroup='1')
		await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
		keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é', '–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
		await state.finish()
		await bot.send_message(call.message.chat.id, text='‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤ 1 –ø–æ–¥–≥—Ä—É–ø–ø–µ', reply_markup=keyboard)
	elif call.data == 'subgroup2':
		await DB.update(UserID=call.message.chat.id, Subgroup='2')
		await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
		keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é', '–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
		await state.finish()
		await bot.send_message(call.message.chat.id, text='‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤–æ 2 –ø–æ–¥–≥—Ä—É–ø–ø–µ', reply_markup=keyboard)
	elif call.data == 'close':
		await state.finish()
		await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

@dp.message_handler(state=Info.chuvsu_add_subgroup)
async def chuvsu_add_subgroup(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  
