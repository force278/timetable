from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from states.info import Info
from loader import dp, DB, bot, CR
from constants import *
from funcs.chgau_func import *

# –í–´–ë–†–ê–õ–ò –ß–ì–ê–£ –ö–ù–û–ü–ö–ê–ú–ò (–ü–û–ö–ê–ó–´–í–ê–ï–ú –§–ê–ö–£–õ–¨–¢–ï–¢–´)
@dp.callback_query_handler(state=Info.chgau_what)
async def chgau_what(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chgau_augment()
	if call.data == 'button':
		keyboard = types.InlineKeyboardMarkup()
		for num, fac in CHGAU_FAC.items():
			key_fac_edit = types.InlineKeyboardButton(text=fac['name'], callback_data=num)
			keyboard.add(key_fac_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞?', reply_markup=keyboard)
		await Info.chgau_add_fac.set()
	elif call.data == 'back':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()


# –í–´–ë–†–ê–õ–ò –¢–ï–ö–°–¢–û–ú
@dp.message_handler(state=Info.chgau_what)
async def chgau_what(message: types.Message, state=FSMContext):
	# await bot.delete_message(chat_id=message.from_user.id, message_id=message.from_user.id)
	await CR.chgau_augment()
	if message.text.lower() in CHGAU_GROUPS:
		await DB.update(UserID=message.from_user.id, GroupID=CHGAU_GROUPS[message.text.lower()]['groupid'], GroupName=message.text.lower())
		keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
		await state.finish()
		await bot.send_message(message.from_user.id, text=f'‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤ –≥—Ä—É–ø–ø–µ: {message.text.lower()}' , reply_markup=keyboard)
	elif message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text=f'ü§∑–ù–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –≥—Ä—É–ø–ø—É.\n\n–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ç–∞–∫ –∂–µ\n–∫–∞–∫ –Ω–∞ —Å–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.')



# –í–´–ë–†–ê–õ–ò –§–ê–ö–£–õ–¨–¢–ï–¢ (–ü–û–ö–ê–ó–´–í–ê–ï–ú –ö–£–†–°)
@dp.callback_query_handler(state=Info.chgau_add_fac)
async def chgau_add_fac(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chgau_augment()
	if call.data == 'back':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(call.message.chat.id, text='1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∞-1–º</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chgau_what.set()
	else:
		await state.update_data(fac_id = call.data)
		keyboard = types.InlineKeyboardMarkup()
		course = CHGAU_COURSE[call.data]
		for i in range(1, int(course)+1):
			key_course = types.InlineKeyboardButton(text=f'{i} –∫—É—Ä—Å', callback_data=i)
			keyboard.insert(key_course)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å', reply_markup=keyboard)
		await Info.chgau_add_course.set()

@dp.message_handler(state=Info.chgau_add_fac)
async def chgau_add_fac(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –ö–£–†–° (–ü–û–ö–ê–ó–´–í–ê–ï–ú –ì–†–£–ü–ü–´)
@dp.callback_query_handler(state=Info.chgau_add_course)
async def chgau_add_course(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chgau_augment()
	if call.data == 'back':
		keyboard = types.InlineKeyboardMarkup()
		for num, fac in CHGAU_FAC.items():
			key_fac_edit = types.InlineKeyboardButton(text=fac['name'], callback_data=num)
			keyboard.add(key_fac_edit)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–ò–∑ –∫–∞–∫–æ–≥–æ –í—ã —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞?', reply_markup=keyboard)
		await Info.chgau_add_fac.set()
	else:
		data = await state.get_data()
		data = data['fac_id']
		data = CHGAU_FAC[data]['groups']['course'][call.data]
		keyboard = types.InlineKeyboardMarkup()
		for key, value in data.items():
			key_group = types.InlineKeyboardButton(text=key, callback_data=data[key]['groupid'])
			keyboard.add(key_group)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–ò–∑ –∫–∞–∫–æ–π –í—ã –≥—Ä—É–ø–ø—ã?', reply_markup=keyboard)
		await Info.chgau_add_group.set()

@dp.message_handler(state=Info.chgau_add_course)
async def chgau_add_course(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  


# –í–´–ë–†–ê–õ–ò –ì–†–£–ü–ü–£ 
@dp.callback_query_handler(state=Info.chgau_add_group)
async def chgau_add_group(call: types.CallbackQuery, state=FSMContext):
	await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
	await CR.chgau_augment()
	if call.data == 'back':
		data = await state.get_data()
		data = data['fac_id']
		course = CHGAU_COURSE[data]
		keyboard = types.InlineKeyboardMarkup()
		for i in range(1, int(course)+1):
			key_course = types.InlineKeyboardButton(text=f'{i} –∫—É—Ä—Å', callback_data=i)
			keyboard.insert(key_course)
		key_form_edit = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data='back')
		keyboard.add(key_form_edit)
		await bot.send_message(call.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å', reply_markup=keyboard)
		await Info.chgau_add_course.set()
	else:
		data = await state.get_data()
		data = data['fac_id']
		groupname = CHGAU_GROUPS_INV[data][call.data]
		keyboard = types.InlineKeyboardMarkup()
		keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row('–ó–∞–≤—Ç—Ä–∞', '–°–µ–≥–æ–¥–Ω—è')
		await DB.update(UserID=call.message.chat.id, GroupID=call.data, GroupName=groupname)
		await state.finish()
		await bot.send_message(call.message.chat.id, text=f'‚úÖ–¢–µ–ø–µ—Ä—å –í—ã –≤ –≥—Ä—É–ø–ø–µ {groupname}', reply_markup=keyboard)
	
@dp.message_handler(state=Info.chgau_add_group)
async def chgau_add_group(message):
	await CR.augment()
	if message.text.lower() == '/start':
		await DB.update(UserID=message.from_user.id, University='–ß–ì–£')
		keyboard = types.InlineKeyboardMarkup()
		key_button = types.InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏', callback_data='button') 
		keyboard.add(key_button)
		await bot.send_message(message.from_user.id, text='üïäÔ∏è–ü—Ä–∏–≤–µ—Ç, —è —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n1Ô∏è‚É£–¢—ã –º–æ–∂–µ—à—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã üíª\nüîπ–ù–∞–ø—Ä–∏–º–µ—Ä: <b>–∏–≤—Ç-42-20</b>\n\n2Ô∏è‚É£–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–∫–∞–º–∏ üì≤', reply_markup=keyboard)
		await Info.chuvsu_what.set()
	else:
		await bot.send_message(message.from_user.id, text='üëÜ–ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ.')  
